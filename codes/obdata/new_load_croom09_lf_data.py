# Croom et al. 2009
# Measuring M_g(z=2) (converted to M_1450 in this code)
from data import *
import numpy as np

def load_croom09_lf_data(z): 
	if (z <= 0.40) or (z > 2.6): return False
	elif (z>0.40) and (z<=0.68):	
		z_c = (0.40+0.68)/2.
		M_g=np.array([-26.75,-26.25,-25.75,-25.25,-24.75,-24.25,-23.75,-23.25,-22.75,-22.25,-21.75,-21.25,-20.75,-20.25])
		Nq=np.array([5  , 8  ,43 ,81 , 200, 250, 185,77 , 121, 141, 119,81 , 33 , 7])
		PHI_1450=np.array([-8.28, -8.10,-7.37,-7.09, -6.71, -6.44, -6.16,-6.04, -5.69, -5.59, -5.58,-5.52, -5.34, -5.11])
		DPHI_1450_up  =np.array([0.22, 0.17, 0.06, 0.05, 0.03, 0.03, 0.03, 0.05, 0.04, 0.04, 0.04, 0.05, 0.07, 0.19])
		DPHI_1450_down=np.array([0.24, 0.18, 0.07, 0.05, 0.03, 0.03, 0.03, 0.05, 0.04, 0.04, 0.04, 0.05, 0.08, 0.20])
	elif (z>0.68) and (z<=1.06):	
		z_c = (0.68+1.06)/2.
		M_g=np.array([-28.25,-27.75,-27.25,  -26.75,-26.25,-25.75,-25.25,-24.75,-24.25,-23.75,-23.25,-22.75,-22.25,-21.75,-21.25])
		Nq=np.array([3,1,15 ,57 ,158 ,354 ,369 ,262 ,173 ,287 ,342 ,421 ,274 ,81 ,5])
		PHI_1450=np.array([-8.85, -9.42, -8.25, -7.67, -7.24, -6.88, -6.52, -6.22, -6.00, -5.72, -5.62, -5.48, -5.44, -5.43, -5.32])
		DPHI_1450_up  =np.array([0.29, 0.52, 0.12, 0.05, 0.03, 0.02, 0.02, 0.03, 0.03, 0.02, 0.02, 0.02, 0.03, 0.05, 0.22])
		DPHI_1450_down=np.array([0.34, 0.77, 0.13, 0.06, 0.04, 0.02, 0.02, 0.03, 0.03, 0.03, 0.02, 0.02, 0.03, 0.05, 0.24])
	elif (z>1.06) and (z<=1.44):	
		z_c = (1.06+1.44)/2.
		M_g=np.array([-29.25, -28.25, -27.75, -27.25, -26.75, -26.25, -25.75, -25.25, -24.75, -24.25, -23.75, -23.25, -22.75, -22.25])
		Nq=np.array([1, 7 , 34 ,69 ,254 ,431 ,260 ,194 ,300 ,448 ,555 ,484 ,118 ,1])
		PHI_1450=np.array([-9.31, -8.65, -7.96, -7.65, -7.11, -6.73, -6.32, -6.08, -5.82, -5.65, -5.53, -5.46, -5.52, -4.99])
		DPHI_1450_up  =np.array([0.52, 0.19, 0.07, 0.05, 0.03, 0.02, 0.03, 0.03, 0.02, 0.02, 0.02, 0.02, 0.04, 0.52])
		DPHI_1450_down=np.array([0.77, 0.20, 0.08, 0.06, 0.03, 0.02, 0.03, 0.03, 0.03, 0.02, 0.02, 0.02, 0.04, 0.77])
	elif (z>1.44) and (z<=1.82):	
		z_c = (1.44+1.82)/2.
		M_g=np.array([-29.75, -29.25, -28.75, -28.25, -27.75, -27.25, -26.75, -26.25, -25.75, -25.25, -24.75, -24.25, -23.75, -23.25])
		Nq=np.array([1  , 1  , 7  ,28 ,90 , 285, 541, 195, 226, 313, 510, 635, 528,98])
		PHI_1450=np.array([-9.40, -9.54, -8.69,-8.09,-7.58, -7.11, -6.68, -6.32, -6.06, -5.86, -5.66, -5.54, -5.47,-5.39])
		DPHI_1450_up  =np.array([0.52 ,0.52 ,0.19 ,0.08 ,0.04 ,0.02 ,0.02 ,0.03 ,0.03 ,0.02 ,0.02 ,0.02 ,0.02,0.04])
		DPHI_1450_down=np.array([0.77, 0.77, 0.20, 0.09, 0.05, 0.03, 0.02, 0.03, 0.03, 0.03, 0.02, 0.02, 0.02,0.05])
	elif (z>1.82) and (z<=2.20):	
		z_c = (1.82+2.20)/2.
		M_g=np.array([-29.25, -28.75, -28.25, -27.75, -27.25, -26.75, -26.25, -25.75, -25.25, -24.75, -24.25, -23.75])
		Nq=np.array([3 ,15 ,47 ,193 ,387 ,150 ,185 ,285 ,432 ,538 ,557 ,101])
		PHI_1450=np.array([-9.08,-8.38, -7.89, -7.30, -6.88, -6.47, -6.18, -5.93, -5.76, -5.67, -5.57, -5.58])
		DPHI_1450_up  =np.array([0.29,0.12, 0.06, 0.03, 0.02, 0.03, 0.03, 0.02, 0.02, 0.02, 0.02, 0.04])
		DPHI_1450_down=np.array([0.34,0.13, 0.07, 0.03, 0.02, 0.04, 0.03, 0.03, 0.02, 0.02, 0.02, 0.05])
	elif (z>2.20) and (z<=2.60):	
		z_c = (2.20+2.60)/2.
		M_g=np.array([-30.25, -29.25, -28.75, -28.25, -27.75, -27.25, -26.75, -26.25, -25.75, -25.25, -24.75, -24.25])
		Nq=np.array([1    ,3   ,12  ,61  ,212 ,108 ,73  ,119 ,201 ,277 ,265 ,103])
		PHI_1450=np.array([-9.58,  -9.02, -8.42, -7.74, -7.17, -6.81, -6.48, -6.23, -5.97, -5.86, -5.78, -5.76])
		DPHI_1450_up  =np.array([0.52 ,0.29 ,0.14 ,0.05 ,0.03 ,0.04 ,0.05 ,0.04 ,0.03 ,0.03 ,0.03 ,0.04])
		DPHI_1450_down=np.array([0.77, 0.34, 0.15, 0.06, 0.03, 0.04, 0.05, 0.04, 0.03, 0.03, 0.03, 0.05])

	M_1450 = M_g + 1.233 #see kk18
	DPHI_1450=(DPHI_1450_up + DPHI_1450_down)/2.

	return M_1450, PHI_1450, DPHI_1450
