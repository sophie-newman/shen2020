# Fontanot et al. 2007
# Measuring M_1450
from data_copy import *
import numpy as np

def load_fontanot07_lf_data(z): 
	if (z <= 3.5) or (z > 5.2): return False
	elif (z > 3.5) and (z<=4.0):	
		z_mean = (3.5+4.0)/2.
		M_1450= np.array([-21.67500,-23.02500,-26.01000,-26.51000,-27.01000,-27.51000,-28.01000,-28.51000])
		D_M_1450=np.array([0.67500,0.67500,0.25000,0.25000,0.25000,0.25000,0.25000,0.25000])
		PHI_1450= np.array([-5.53494,-5.72533,-6.85175,-7.10807,-7.55088,-8.14622,-8.63232,-8.81655])
		PHI_1450_up= np.array([-5.16964,-5.20682,-6.81820,-7.06478,-7.47075,-7.98286,-8.33726,-8.45125])
		PHI_1450_down= np.array([-5.98593,-6.48729,-6.88811,-7.15617,-7.63211,-8.31820,-8.97367,-9.26754])
		DPHI_1450= (PHI_1450_up - PHI_1450_down)/2.
	
	elif (z > 4.0) and (z<=5.2):
		z_mean = (4.0+5.2)/2.
		M_1450= np.array([-21.67500,-23.02500, -26.01000,-26.51000,-27.01000,-27.51000,-28.01000,-28.51000])
		D_M_1450=np.array([0.67500,0.67500 ,0.25000,0.25000,0.25000,0.25000,0.25000,0.25000])
		PHI_1450= np.array([-6.26777,-6.23862, -7.37729,-7.68216,-7.99743,-8.35608,-8.89455,-9.66451])
		PHI_1450_up= np.array([-5.74925,-5.72011, -7.33647,-7.63769,-7.92833,-8.24972,-8.69115,-9.14599])
		PHI_1450_down= np.array([-7.02972, -7.00058 , -7.42234, -7.73172, -8.06721, -8.46483, -9.11399,-10.42646])
		DPHI_1450= (PHI_1450_up - PHI_1450_down)/2.

	return M_1450, PHI_1450, DPHI_1450
